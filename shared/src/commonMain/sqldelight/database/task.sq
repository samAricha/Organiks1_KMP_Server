import kotlin.Boolean;
import kotlin.Int;
import kotlin.Long;
import kotlin.String;



CREATE TABLE taskEntity (
    id INTEGER AS Int NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT,
    type TEXT NOT NULL,
    start TEXT NOT NULL,
    color INTEGER AS Long NOT NULL,
    current TEXT AS String NOT NULL,
    date TEXT NOT NULL,
    focusSessions INTEGER AS Int NOT NULL,
    currentCycle INTEGER AS Int NOT NULL,
    completed INTEGER AS Boolean NOT NULL,
    consumedFocusTime INTEGER AS Long NOT NULL,
    consumedShortBreakTime INTEGER AS Long NOT NULL,
    consumedLongBreakTime INTEGER AS Long NOT NULL,
    inProgressTask INTEGER AS Boolean NOT NULL,
    active INTEGER AS Boolean NOT NULL
);

getAllTasks:
SELECT * FROM taskEntity ORDER BY date DESC;

getTaskById:
SELECT * FROM taskEntity WHERE id = ?;

getActiveTask:
SELECT * FROM taskEntity WHERE active = 1;

insertTask:
INSERT OR REPLACE
INTO taskEntity (name, description, type, start, color, current, date, focusSessions, currentCycle, completed, consumedFocusTime, consumedShortBreakTime, consumedLongBreakTime, inProgressTask, active)
VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

updateTask:
UPDATE taskEntity SET name = ?, description = ?, start = ?, color = ?, current = ?, date = ?, focusSessions = ?, completed = ?, active = ? WHERE id = ?;

updateConsumedFocusTime:
UPDATE taskEntity SET consumedFocusTime = ? WHERE id = ?;

updateConsumedShortBreakTime:
UPDATE taskEntity SET consumedShortBreakTime = ? WHERE id = ?;

updateConsumedLongBreakTime:
UPDATE taskEntity SET consumedLongBreakTime = ? WHERE id = ?;

updateInProgressTask:
UPDATE taskEntity SET inProgressTask = ? WHERE id = ?;

updateCurrentSessionName:
UPDATE taskEntity SET current = ? WHERE id = ?;

updateTaskCompleted:
UPDATE taskEntity SET completed = ? WHERE id = ?;

updateTaskCycleNumber:
UPDATE taskEntity SET currentCycle = ? WHERE id = ?;

updateTaskActiveStatus:
UPDATE taskEntity SET active = ? WHERE id = ?;

updateAllTasksActiveStatusToInactive:
UPDATE taskEntity SET active = 0;

deleteTaskById:
DELETE FROM taskEntity WHERE id = ?;

deleteAllTasks:
DELETE FROM taskEntity;
